{
	"zustand store": {
		"scope": "javascript, typescript",
		"prefix": "zs",
		"body": [
			"import { create } from 'zustand'",
			"",
			"export type ${TM_FILENAME_BASE/(?:^|[-_])(\\w)/${1:/capitalize}/g} = {",
			"$0",
			"}",
			"",
			"export const use${TM_FILENAME_BASE/(?:^|[-_])(\\w)/${1:/upcase}/g}Store = create<${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}>((set) => ({",
			"",
			"}));"
		],
		"description": "zustand function"
	},
	"hook": {
		"scope": "javascriptreact, typescriptreact",
		"prefix": "hook",
		"body": [
			"export default function $TM_FILENAME_BASE () {",
			"$0",
			"}"
		],
		"description": "hook function"
	},
	"Function component": {
		"scope": "javascriptreact, typescriptreact",
		"prefix": "fc",
		"body": [
			"",
			"export default function ${TM_FILENAME_BASE/(?:^|[-_])(\\w)/${1:/upcase}/g} () {",
			"  return <div>$TM_FILENAME_BASE</div>",
			"}"
		],
		"description": "react typescript function component"
	},
	"Function component with props": {
		"scope": "typescriptreact",
		"prefix": "fcwp",
		"body": [
			"",
			"type ${TM_FILENAME_BASE/(?:^|[-_])(\\w)/${1:/upcase}/g}Props = {",
			"$0",
			"}",
			"",
			"export default function ${TM_FILENAME_BASE/(?:^|[-_])(\\w)/${1:/upcase}/g} ({ } : ${TM_FILENAME_BASE/(?:^|[-_])(\\w)/${1:/upcase}/g}Props) {",
			"  return <div>$TM_FILENAME_BASE</div>",
			"}"
		],
		"description": "react typescript function component with props"
	},
	"useEffect": {
		"scope": "javascriptreact, typescriptreact",
		"prefix": "effect",
		"body": [
			"useEffect(()=>{",
			"$0",
			"},[])",
			""
		],
		"description": "react useEffect"
	},
	"useState": {
		"scope": "javascriptreact",
		"prefix": "state",
		"body": [
			"const [$0, set${0/(.*)/${0:/capitalize}/}] = useState()"
		],
		"description": "react useState"
	},
	"typescript useState": {
		"scope": "typescriptreact",
		"prefix": "state",
		"body": [
			"const [$0, set${0/(.*)/${0:/capitalize}/}] = useState<$1>($2)"
		],
		"description": "react typescript useState"
	},
	"useReducer": {
		"scope": "javascriptreact",
		"prefix": "reducer",
		"body": [
			"const [$0, update${0/(.*)/${0:/capitalize}/}] = useReducer(recuder, init)"
		],
		"description": "react useReducer"
	},
	"typescript useReducer": {
		"scope": "typescriptreact",
		"prefix": "reducer",
		"body": [
			"const [$0, update${0/(.*)/${0:/capitalize}/}] = useReducer<$1>(recuder, init)"
		],
		"description": "react typescript useReducer"
	}
}